pipeline {

    agent any

    environment {
        ARM_CLIENT_ID       = credentials('arm-client-id')
        ARM_CLIENT_SECRET   = credentials('arm-client-secret')
        ARM_TENANT_ID       = credentials('arm-tenant-id')
        ARM_SUBSCRIPTION_ID = credentials('arm-subscription-id')
        VAULT_TOKEN         = credentials('vault-token')
    }

    stages {
        stage('Install Terraform') {
            steps {
                sh "sudo hab pkg install -b liftoff-modern-application-delivery/terraform"
            }
        }
        stage('Destroy Terraform') {
            parallel {
                stage('example-1') {
                    stages {
                        stage('Terraform Initialization') {
                            steps {
                                dir("examples/example-1-server-provisioning/terraform-pipeline") {
                                    sh "terraform init"
                                }
                            }
                        }
                        stage('Terraform Validation') {
                            steps {
                                dir("examples/example-1-server-provisioning/terraform-pipeline") {
                                    sh "terraform validate"
                                }
                            }
                        }
                        stage('Terraform Apply') {
                            steps {
                                dir("examples/example-1-server-provisioning/terraform-pipeline") {
                                    sh "terraform destroy -auto-approve"
                                }
                            }
                        }
                    }
                }
                stage('example-2') {
                    stages {
                        stage('Terraform Initialization') {
                            steps {
                                dir("examples/example-2-application-automation/terraform-pipeline") {
                                    sh "terraform init"
                                }
                            }
                        }
                        stage('Terraform Validation') {
                            steps {
                                dir("examples/example-2-application-automation/terraform-pipeline") {
                                    sh "terraform validate"
                                }
                            }
                        }
                        stage('Terraform Apply') {
                            steps {
                                dir("examples/example-2-application-automation/terraform-pipeline") {
                                    sh "terraform destroy -auto-approve"
                                }
                            }
                        }
                    }
                }
                stage('example-3') {
                    stages {
                        stage('Terraform Initialization') {
                            steps {
                                dir("examples/example-3-secrets-management/terraform-pipeline") {
                                    sh "terraform init"
                                }
                            }
                        }
                        stage('Terraform Validation') {
                            steps {
                                dir("examples/example-3-secrets-management/terraform-pipeline") {
                                    sh "terraform validate"
                                }
                            }
                        }
                        stage('Terraform Apply') {
                            steps {
                                dir("examples/example-3-secrets-management/terraform-pipeline") {
                                    sh "terraform destroy -auto-approve"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
